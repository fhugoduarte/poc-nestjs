type Query {
  purchases(page: Int, perPage: Int): PurchasePagination
  purchase(id: String!): Purchase
}

# type Mutation {
#   refund(createUserInput: CreateUserInput): User
# }

type PurchasePagination {
  data: [Purchase]!
  page: Int!
  perPage: Int!
  total: Int!
}

type Purchase {
  id: String!
  status: String!
  product: Product!
  customer: User!
}

enum ProductType {
  onetime
  recurring
}

type Product {
  id: String!
  slug: String!
  amount: Int!
  type: ProductType!
}

# input CreateUserInput {
#   name: String!
#   email: String!
#   address: CreateAddressInput!
# }

# input CreateAddressInput {
#   street: String!
#   city: String!
#   state: String!
# }
